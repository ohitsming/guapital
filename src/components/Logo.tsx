import { useId } from 'react'
import clsx from 'clsx'
import Image from 'next/image'

export function Logomark({
    invert = false,
    filled = false,
    ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
    invert?: boolean
    filled?: boolean
}) {
    let id = useId()

    return (
        <svg  viewBox="0 0 47 40" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <svg data-logo="logo" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47 40" id={`${id}-path`} className='h-8'>
                <g id="logogram" transform="translate(0, 0) rotate(0) ">
                    <path d="M0.99033 17.4405C2.22937 12.4605 5.09898 8.03799 9.14219 4.87751C13.1855 1.71696 18.1699 0 23.3018 0C28.4336 0 33.4181 1.71696 37.4613 4.87751C41.5046 8.03799 44.3741 12.4605 45.6132 17.4405H43.5979C40.1982 17.3905 36.8681 18.4065 34.0754 20.346C33.9142 20.4627 33.7459 20.5693 33.5716 20.6651H33.3364C33.1621 20.5693 32.9938 20.4627 32.8326 20.346C30.0152 18.4514 26.6969 17.4395 23.3018 17.4395C19.9066 17.4395 16.5883 18.4514 13.7709 20.346C13.6097 20.4627 13.4414 20.5693 13.2671 20.6651H13.032C12.8576 20.5693 12.6893 20.4627 12.5281 20.346C9.73537 18.4065 6.40536 17.3905 3.00566 17.4405H0.99033ZM39.9703 27.9707C41.0048 27.165 42.287 26.7435 43.5979 26.7782H46.3018V21.3872H43.5979C41.289 21.3593 39.033 22.078 37.1656 23.4362C36.1147 24.2109 34.8436 24.6289 33.538 24.6289C32.2324 24.6289 30.9612 24.2109 29.9104 23.4362C27.9956 22.1033 25.7187 21.3887 23.3857 21.3887C21.0528 21.3887 18.7758 22.1033 16.8611 23.4362C15.8103 24.2109 14.5391 24.6289 13.2335 24.6289C11.9279 24.6289 10.6567 24.2109 9.60588 23.4362C7.7155 22.0605 5.42709 21.341 3.08964 21.3872H0.301758V26.7782H3.00566C4.31649 26.7435 5.59873 27.165 6.63327 27.9707C8.54448 29.3045 10.8189 30.0196 13.1495 30.0196C15.4801 30.0196 17.7546 29.3045 19.6658 27.9707C20.7016 27.1675 21.9829 26.7463 23.2934 26.7782C24.6047 26.7406 25.8878 27.1625 26.921 27.9707C28.8357 29.3036 31.1127 30.0181 33.4456 30.0181C35.7785 30.0181 38.0555 29.3036 39.9703 27.9707ZM39.9703 37.6107C41.0048 36.805 42.287 36.3835 43.5979 36.4183H46.3018V31.0272H43.5979C41.289 30.9994 39.033 31.718 37.1656 33.0762C36.1147 33.8509 34.8436 34.2689 33.538 34.2689C32.2324 34.2689 30.9612 33.8509 29.9104 33.0762C27.9956 31.7434 25.7187 31.0289 23.3857 31.0289C21.0528 31.0289 18.7758 31.7434 16.8611 33.0762C15.8103 33.8509 14.5391 34.2689 13.2335 34.2689C11.9279 34.2689 10.6567 33.8509 9.60588 33.0762C7.7155 31.7007 5.42709 30.9811 3.08964 31.0272H0.301758V36.4183H3.00566C4.31649 36.3835 5.59873 36.805 6.63327 37.6107C8.54448 38.9445 10.8189 39.6596 13.1495 39.6596C15.4801 39.6596 17.7546 38.9445 19.6658 37.6107C20.7016 36.8076 21.9829 36.3864 23.2934 36.4183C24.6047 36.3806 25.8878 36.8025 26.921 37.6107C28.8357 38.9436 31.1127 39.6581 33.4456 39.6581C35.7785 39.6581 38.0555 38.9436 39.9703 37.6107Z" fill="#394149" />
                </g>
                <g id="logotype" transform="translate(47, 20)"></g>

            </svg>
        </svg>
    )
}

export function Logo({
    className,
    invert = false,
    filled = false,
    fillOnHover = false,
    ...props
}: React.ComponentPropsWithoutRef<'svg'> & {
    invert?: boolean
    filled?: boolean
    fillOnHover?: boolean
}) {
    return (
        <div className="flex items-center justify-center gap-x-2">
            <div className="flex-shrink-0">
                <Image
                    src="/assets/logo.png"
                    alt="LocalMoco Logo"
                    width={600}
                    height={600}
                    className="h-16 w-16 object-cover transform scale-255 ml-20 xl:ml-0"
                />
            </div>
            {/* <svg
                viewBox="0 0 346.35000610351562 37.25"
                aria-hidden="true"
                className={clsx(fillOnHover && 'group/logo', className)}
                {...props}
            >

                <svg xmlns="http://www.w3.org/2000/svg" viewBox="-20 20 306.35000610351562 37.25" data-asc="1.1"
                    width="236.35000610351562" height="37.25" fill={!invert ? '#000000' : "#ffffff"}><defs />
                    <g>
                        <g>
                            <g transform="translate(0, 0)"><path d="M0 18.25L5.65 18.25L5.65 50.00L16.20 50.00L16.20 55.00L0 55.00L0 18.25ZM31.95 55.50Q28.40 55.50 25.65 53.90Q22.90 52.30 21.40 49.55Q19.90 46.80 19.90 43.45Q19.90 40.15 21.38 37.40Q22.85 34.65 25.60 33.05Q28.35 31.45 31.95 31.45Q35.55 31.45 38.28 33.05Q41 34.65 42.48 37.40Q43.95 40.15 43.95 43.45Q43.95 46.80 42.45 49.55Q40.95 52.30 38.23 53.90Q35.50 55.50 31.95 55.50M32.10 51.10Q35 51.10 36.68 48.95Q38.35 46.80 38.35 43.55Q38.35 40.30 36.55 38.08Q34.75 35.85 31.80 35.85Q28.95 35.85 27.23 38.05Q25.50 40.25 25.50 43.55Q25.50 46.75 27.35 48.93Q29.20 51.10 32.10 51.10ZM60.40 55.50Q57.00 55.50 54.28 54.03Q51.55 52.55 49.95 49.78Q48.35 47.00 48.35 43.25Q48.35 39.70 49.83 37.03Q51.30 34.35 53.98 32.90Q56.65 31.45 60.15 31.45Q62.80 31.45 64.73 32.13Q66.65 32.80 67.75 33.80L65.35 38.15Q63.25 36.05 60.60 36.05Q57.40 36.05 55.73 38.00Q54.05 39.95 54.05 43.20Q54.05 46.90 55.78 48.95Q57.50 51.00 60.60 51.00Q62.15 51.00 63.63 50.55Q65.10 50.10 65.90 49.50L67.85 53.30Q66.75 54.15 64.78 54.83Q62.80 55.50 60.40 55.50ZM83.15 55.50Q80.05 55.50 77.42 54.03Q74.80 52.55 73.23 49.83Q71.65 47.10 71.65 43.45Q71.65 39.85 73.03 37.15Q74.40 34.45 76.95 32.95Q79.50 31.45 82.95 31.45Q84.95 31.45 86.70 32.15Q88.45 32.85 89.65 33.88Q90.85 34.90 91.25 35.90L91.35 32.05L96.50 32.05L96.50 55.00L91.40 55.00L91.30 50.95Q90.45 52.75 88.20 54.13Q85.95 55.50 83.15 55.50M84.05 51.00Q86.90 51.00 88.85 49.03Q90.80 47.05 90.80 43.85L90.80 43.50Q90.80 41.35 89.90 39.65Q89 37.95 87.45 37.00Q85.90 36.05 84.05 36.05Q80.85 36.05 79.10 38.13Q77.35 40.20 77.35 43.50Q77.35 46.85 79.08 48.93Q80.80 51.00 84.05 51.00ZM104.20 18.25L109.55 18.25L109.55 55.00L104.20 55.00L104.20 18.25ZM126.95 37.85L124.65 32.65L123.60 37.85L120.20 55.00L114.65 55.00L122.25 18.25L122.85 18.25L132.95 38.10L135.95 44.75L138.95 38.10L148.85 18.25L149.40 18.25L157.30 55.00L151.80 55.00L148.10 37.85L147 32.65L145 37.85L136.10 55.00L135.80 55.00L126.95 37.85ZM172.60 55.50Q169.05 55.50 166.30 53.90Q163.55 52.30 162.05 49.55Q160.55 46.80 160.55 43.45Q160.55 40.15 162.03 37.40Q163.50 34.65 166.25 33.05Q169.00 31.45 172.60 31.45Q176.20 31.45 178.93 33.05Q181.65 34.65 183.13 37.40Q184.60 40.15 184.60 43.45Q184.60 46.80 183.10 49.55Q181.60 52.30 178.88 53.90Q176.15 55.50 172.60 55.50M172.75 51.10Q175.65 51.10 177.33 48.95Q179.00 46.80 179.00 43.55Q179.00 40.30 177.20 38.08Q175.40 35.85 172.45 35.85Q169.60 35.85 167.88 38.05Q166.15 40.25 166.15 43.55Q166.15 46.75 168.00 48.93Q169.85 51.10 172.75 51.10ZM201.05 55.50Q197.65 55.50 194.93 54.03Q192.20 52.55 190.60 49.78Q189 47.00 189 43.25Q189 39.70 190.48 37.03Q191.95 34.35 194.63 32.90Q197.30 31.45 200.80 31.45Q203.45 31.45 205.38 32.13Q207.30 32.80 208.40 33.80L206 38.15Q203.90 36.05 201.25 36.05Q198.05 36.05 196.38 38.00Q194.70 39.95 194.70 43.20Q194.70 46.90 196.43 48.95Q198.15 51.00 201.25 51.00Q202.80 51.00 204.28 50.55Q205.75 50.10 206.55 49.50L208.50 53.30Q207.40 54.15 205.43 54.83Q203.45 55.50 201.05 55.50ZM224.35 55.50Q220.80 55.50 218.05 53.90Q215.30 52.30 213.80 49.55Q212.30 46.80 212.30 43.45Q212.30 40.15 213.78 37.40Q215.25 34.65 218.00 33.05Q220.75 31.45 224.35 31.45Q227.95 31.45 230.68 33.05Q233.40 34.65 234.88 37.40Q236.35 40.15 236.35 43.45Q236.35 46.80 234.85 49.55Q233.35 52.30 230.63 53.90Q227.90 55.50 224.35 55.50M224.50 51.10Q227.40 51.10 229.08 48.95Q230.75 46.80 230.75 43.55Q230.75 40.30 228.95 38.08Q227.15 35.85 224.20 35.85Q221.35 35.85 219.63 38.05Q217.90 40.25 217.90 43.55Q217.90 46.75 219.75 48.93Q221.60 51.10 224.50 51.10Z" />
                            </g>
                        </g>
                    </g>
                </svg>
            </svg> */}
        </div>
        
    )
}